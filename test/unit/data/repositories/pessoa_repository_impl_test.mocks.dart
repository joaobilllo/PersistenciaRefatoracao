// Mocks generated by Mockito 5.4.6 from annotations
// in exemplo/test/unit/data/repositories/pessoa_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:exemplo/data/daos/pessoa_dao.dart' as _i2;
import 'package:exemplo/data/dtos/pessoa_dto.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [PessoaDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockPessoaDao extends _i1.Mock implements _i2.PessoaDao {
  @override
  _i3.Future<int> create(_i4.PessoaDto? dto) =>
      (super.noSuchMethod(
            Invocation.method(#create, [dto]),
            returnValue: _i3.Future<int>.value(0),
            returnValueForMissingStub: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<List<_i4.PessoaDto>> findAll() =>
      (super.noSuchMethod(
            Invocation.method(#findAll, []),
            returnValue: _i3.Future<List<_i4.PessoaDto>>.value(
              <_i4.PessoaDto>[],
            ),
            returnValueForMissingStub: _i3.Future<List<_i4.PessoaDto>>.value(
              <_i4.PessoaDto>[],
            ),
          )
          as _i3.Future<List<_i4.PessoaDto>>);

  @override
  _i3.Future<_i4.PessoaDto?> findById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#findById, [id]),
            returnValue: _i3.Future<_i4.PessoaDto?>.value(),
            returnValueForMissingStub: _i3.Future<_i4.PessoaDto?>.value(),
          )
          as _i3.Future<_i4.PessoaDto?>);

  @override
  _i3.Future<int> update(_i4.PessoaDto? dto) =>
      (super.noSuchMethod(
            Invocation.method(#update, [dto]),
            returnValue: _i3.Future<int>.value(0),
            returnValueForMissingStub: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> deleteById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteById, [id]),
            returnValue: _i3.Future<int>.value(0),
            returnValueForMissingStub: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<bool> existsById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#existsById, [id]),
            returnValue: _i3.Future<bool>.value(false),
            returnValueForMissingStub: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<int> count() =>
      (super.noSuchMethod(
            Invocation.method(#count, []),
            returnValue: _i3.Future<int>.value(0),
            returnValueForMissingStub: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);
}
